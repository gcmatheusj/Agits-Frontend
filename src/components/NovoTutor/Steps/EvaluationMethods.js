import React from 'react';
import { connect } from 'react-redux';
import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';
import { Typography } from '@material-ui/core';
import ActionCreators from '../../../redux/actions/tutor';

import quick from '../../../assets/quick.png';
import custom from '../../../assets/custom.png';
import placement from '../../../assets/placement.png';

import StepsCard from './StepsCard'

const styles = theme => ({
  title: {
    [theme.breakpoints.down('sm')]: {
      fontSize: '0.9rem',
    },
  },
});

const EvaluationMethods = (props) => {
  const {
    classes, switchQuickTest, switchCustomTest, switchPlacementTest,
    quickTest, customTest, placementTest,
  } = props;

  const values = [
    {
      img: quick,
      title: 'Quick Test',
      description: 'Enable this feature if you want to provide a quick test for your students to evaluate their learning. This test can be automatically generated by the tutor every time a student wants to test her current knowledge.',
      type: quickTest,
      switcher: switchQuickTest,
      value: 'checkedA'
    },
    {
      img: custom,
      title: 'Custom Test',
      description: 'Enable this feature if you want to provide a customized test for your students. In this test your student will be able to select which subjects she wants to test.',
      type: customTest,
      switcher: switchCustomTest,
      value: 'checkedB'
    },
    {
      img: placement,
      title: 'Placement Test',
      description: 'Enable this feature if you want to define a test for your students to evaluate more advanced subjects that have not been studied yet. If the student is approved in the test, she will have her knowledge level updated to include learning about such objects.',
      type: placementTest,
      switcher: switchPlacementTest,
      value: 'checkedC'
    }
  ]

  return (
    <div style={{ justifyContent: 'center' }}>
      <Typography className={classes.title} variant="subtitle1">
        We are almost done! You can also select which evalution strategies you can provide for
        your students.
      </Typography>
      
      {
        values.map((v, k) => {
          return (
            <StepsCard
              img={v.img}
              title={v.title}
              description={v.description}
              type={v.type}
              switcher={v.switcher}
              value={v.value}
            />
          )
        })
      }

    </div>
  );
};

EvaluationMethods.propTypes = {
  classes: PropTypes.object.isRequired,
};

const mapStateToProps = state => ({
  tutor: state.tutor,
});

const mapDispatchToProps = dispatch => ({
  switchQuickTest: () => dispatch(ActionCreators.quicktest()),
  switchCustomTest: () => dispatch(ActionCreators.customtest()),
  switchPlacementTest: () => dispatch(ActionCreators.placementtest()),
});

export default withStyles(styles)(
  connect(mapStateToProps, mapDispatchToProps)(EvaluationMethods),
);
